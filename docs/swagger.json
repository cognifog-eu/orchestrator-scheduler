{
    "swagger": "2.0",
    "info": {
        "description": "Job Manager Microservice.",
        "title": "Swagger Job Manager API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8082",
    "basePath": "/",
    "paths": {
        "/jobmanager/jobs": {
            "get": {
                "description": "Get JobGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "get-jobgroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Can not find JobGroup",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobmanager/jobs/create/{app_name}": {
            "post": {
                "description": "create new Job",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "create-new-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Application manifest YAML",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/models.Job"
                        }
                    },
                    "400": {
                        "description": "Application name is required",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobmanager/jobs/executable": {
            "get": {
                "description": "get Jobs by State",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "get-jobs-by-state",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Orchestrator type [ ocm | nuvla ]",
                        "name": "orchestrator",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Orchestrator type is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Can not find executable Jobs",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobmanager/jobs/group/{id}": {
            "delete": {
                "description": "delete job group by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "delete-job-group-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JobGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Can not find JobGroup to delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobmanager/jobs/{id}": {
            "get": {
                "description": "get Job by UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "get-job-by-uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Job ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Can not find Job by ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "update a job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "update-a-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job information",
                        "name": "Job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/models.Job"
                        }
                    },
                    "400": {
                        "description": "ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Can not find Job to update",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete job by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "delete-job-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Can not find Job to delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobmanager/policies/incompliance/create": {
            "post": {
                "description": "create new Incompliance",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "create-new-incompliance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Incompliance Object",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/models.Job"
                        }
                    },
                    "400": {
                        "description": "Incompliance Object is not correct",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobmanager/resources/status/{id}": {
            "put": {
                "description": "update a resource status by uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "update-a-resource-status-by-uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource info",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Resource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Can not find Resource to update",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobmanager/resources/status/{job_id}": {
            "get": {
                "description": "get resource status by job uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "get-resource-status-by-job-uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/models.Resource"
                        }
                    },
                    "400": {
                        "description": "Job ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Can not find Job by ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Condition": {
            "type": "object",
            "properties": {
                "lastTransitionTime": {
                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n+required",
                    "type": "string"
                },
                "message": {
                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.\n+required",
                    "type": "string"
                },
                "observedGeneration": {
                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.\n+optional",
                    "type": "integer"
                },
                "reason": {
                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.\n+required",
                    "type": "string"
                },
                "status": {
                    "description": "status of the condition, one of True, False, Unknown.\n+required",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ConditionStatus"
                        }
                    ]
                },
                "type": {
                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n+required",
                    "type": "string"
                }
            }
        },
        "models.ConditionStatus": {
            "type": "string",
            "enum": [
                "True",
                "False",
                "Unknown"
            ],
            "x-enum-varnames": [
                "ConditionTrue",
                "ConditionFalse",
                "ConditionUnknown"
            ]
        },
        "models.Job": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "job_group_description": {
                    "type": "string"
                },
                "job_group_id": {
                    "description": "unique across all ecosystem",
                    "type": "string"
                },
                "job_group_name": {
                    "type": "string"
                },
                "locker": {
                    "type": "boolean"
                },
                "manifest": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "orchestrator": {
                    "description": "identifies the orchestrator that can execute the job based on target provided by MM",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.OrchestratorType"
                        }
                    ]
                },
                "resource": {
                    "$ref": "#/definitions/models.Resource"
                },
                "state": {
                    "$ref": "#/definitions/models.JobState"
                },
                "targets": {
                    "description": "array of targets where the Manifest is applied",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Target"
                    }
                },
                "type": {
                    "$ref": "#/definitions/models.JobType"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "description": "optional and unique across all ecosystem",
                    "type": "string"
                }
            }
        },
        "models.JobState": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "JobCreated",
                "JobProgressing",
                "JobFinished",
                "JobDegraded"
            ]
        },
        "models.JobType": {
            "type": "integer",
            "enum": [
                5,
                6,
                7,
                8
            ],
            "x-enum-varnames": [
                "CreateDeployment",
                "GetDeployment",
                "DeleteDeployment",
                "RecoveryJob"
            ]
        },
        "models.OrchestratorType": {
            "type": "string",
            "enum": [
                "ocm",
                "nuvla",
                "none"
            ],
            "x-enum-varnames": [
                "OCM",
                "Nuvla",
                "None"
            ]
        },
        "models.Resource": {
            "type": "object",
            "properties": {
                "conditions": {
                    "description": "Target       Target    `json:\"node_target\"`\nStatus    Status    `gorm:\"foreignkey:ResourceID;\" json:\"status\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Condition"
                    }
                },
                "job_id": {
                    "type": "string"
                },
                "resource_name": {
                    "type": "string"
                },
                "resource_uuid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Target": {
            "type": "object",
            "properties": {
                "cluster_name": {
                    "type": "string"
                },
                "node_name": {
                    "type": "string"
                },
                "orchestrator": {
                    "$ref": "#/definitions/models.OrchestratorType"
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth 2.0": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}